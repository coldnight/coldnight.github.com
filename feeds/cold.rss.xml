<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>cold's world - cold</title><link>https://www.linuxzen.com/</link><description>纸上得来终觉浅，绝知此事要躬行</description><lastBuildDate>Tue, 21 Dec 2021 00:00:00 +0800</lastBuildDate><item><title>Rust actix-web Extractors 研究</title><link>https://www.linuxzen.com/rust-actix-web-extractors.html</link><description>&lt;p&gt;参见 &lt;a href="https://www.linuxzen.com/notes/articles/20211221174651-actix_web_extractor/"&gt;actix-web extractors 支持提取任意长度的参数&lt;/a&gt;。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Tue, 21 Dec 2021 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2021-12-21:/rust-actix-web-extractors.html</guid><category>Rust</category><category>Rust</category><category>actix-web</category><category>trait</category></item><item><title>【译】深入理解 Rust future</title><link>https://www.linuxzen.com/understanding-rust-futures-by-going-way-too-deep.html</link><description>&lt;p&gt;原文链接：&lt;a href="https://fasterthanli.me/articles/understanding-rust-futures-by-going-way-too-deep"&gt;Understanding Rust futures by going way too deep&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;译者注：原文大量的引入了有趣的对话，迫于排版问题这里不进行翻译，必要的对话通过引用 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Thu, 29 Jul 2021 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2021-07-29:/understanding-rust-futures-by-going-way-too-deep.html</guid><category>Rust</category><category>Rust</category><category>future</category><category>tokio</category></item><item><title>从零开始用 Emacs 管理笔记</title><link>https://www.linuxzen.com/dump-brain-with-emacs.html</link><description>&lt;h1 id="_1"&gt;用过的笔记管理软件&lt;/h1&gt;
&lt;p&gt;我探索过很多笔记管理软件，从最开始用 Vim 的时候使用 Vimwiki，后面转向自托管的 leanote。后面编辑器切换到 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Wed, 28 Jul 2021 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2021-07-28:/dump-brain-with-emacs.html</guid><category>Other</category><category>Notes</category></item><item><title>【译】Python 幕后 #1: CPython 虚拟机如何工作</title><link>https://www.linuxzen.com/python-behind-the-scenes_1_how_cpython_vm_works.html</link><description>&lt;p&gt;原文链接：&lt;a href="https://tenthousandmeters.com/blog/python-behind-the-scenes-1-how-the-cpython-vm-works/"&gt;Python behind the scenes #1: how the CPython VM works&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id="介绍-introduction"&gt;介绍（Introduction）&lt;/h3&gt;
&lt;p&gt;你是否曾经好奇过当你运行 Python 代码时 &lt;code&gt;python&lt;/code&gt; 做了些什么？&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;script.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这篇文章将开启一 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Tue, 08 Sep 2020 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2020-09-08:/python-behind-the-scenes_1_how_cpython_vm_works.html</guid><category>Python</category><category>Python</category><category>CPython</category><category>VM</category><category>机制</category></item><item><title>【译】Rust 意味着无需手动关闭 Socket 连接</title><link>https://www.linuxzen.com/rust-means-never-having-to-close-a-socket.html</link><description>&lt;blockquote&gt;
&lt;p&gt;译者注：这是我学习 Rust 生命周期对我最有帮助的文章之一，故翻译了一下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原文链接：&lt;a href="https://blog.skylight.io/rust-means-never-having-to-close-a-socket/"&gt;Rust Means Never Having to Close a Socket&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rust 最酷的特性之一 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Thu, 27 Aug 2020 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2020-08-27:/rust-means-never-having-to-close-a-socket.html</guid><category>Rust</category><category>Rust</category><category>借用</category><category>所有权</category></item><item><title>【译】Rust 借用和生命周期</title><link>https://www.linuxzen.com/rust-borrow-and-lifetimes.html</link><description>&lt;blockquote&gt;
&lt;p&gt;译者注：这是我学习 Rust 生命周期对我最有帮助的文章之一，故翻译了一下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原文链接：&lt;a href="http://arthurtw.github.io/2014/11/30/rust-borrow-lifetimes.html"&gt;Rust Borrow and Lifetimes&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Rust 是一门处于往 1.0 活跃开 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Wed, 26 Aug 2020 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2020-08-26:/rust-borrow-and-lifetimes.html</guid><category>Rust</category><category>Rust</category><category>借用</category><category>生命周期</category></item><item><title>【译文】理解布隆过滤器</title><link>https://www.linuxzen.com/understanding-bloom-filter.html</link><description>&lt;p&gt;原文：&lt;a href="https://osoco.es/thoughts/2019/05/understanding-bloom-filters-with-pharo-smalltalk/"&gt;Understanding Bloom filters with Pharo Smalltalk&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;本文通过 HTML 转录了 &lt;a href="https://github.com/osoco/PharoPDS"&gt;PharoPDS&lt;/a&gt; 库及其扩展附带的交互式教程，以探索和理解布隆过滤器。&lt;/p&gt;
&lt;p&gt;因此，如果您想在真实 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 10 May 2019 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2019-05-10:/understanding-bloom-filter.html</guid><category>Tech</category><category>Bloom</category><category>Filter</category><category>布隆过滤器</category><category>Bloom Filter</category></item><item><title>【译文】什么是幂等</title><link>https://www.linuxzen.com/what-is-idempotence.html</link><description>&lt;p&gt;原文：&lt;a href="https://lispcast.com/what-is-idempotence/"&gt;WHAT IS IDEMPOTENCE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;（原文是一个视频的文字记录版，有兴趣的可以看原文和原文中的视频，本文只翻译文字并结合自己的一些理 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sun, 05 May 2019 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2019-05-05:/what-is-idempotence.html</guid><category>Tech</category><category>Idempotence</category><category>幂等</category></item><item><title>Python 3.8 新增 multiprocessing.SharedMemory 支持共享内存</title><link>https://www.linuxzen.com/python-38-shared-memory.html</link><description>&lt;p&gt;Python 在 2019-02-25 释出了 3.8 早期预览版 &lt;a href="https://www.python.org/downloads/release/python-380a2/"&gt;3.8.0a2&lt;/a&gt;，其中新增了 &lt;a href="https://docs.python.org/3.8/library/multiprocessing.shared_memory.html"&gt;multiprocessing.SharedMemory&lt;/a&gt; 用以支持共享内存，大大提高多进程之间通信效率。简单看了一下 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Thu, 28 Feb 2019 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2019-02-28:/python-38-shared-memory.html</guid><category>Python</category><category>Python</category><category>3.8</category><category>multiprocessing</category><category>共享</category><category>内存</category><category>shared</category><category>memory</category></item><item><title>译文：Go 内存分配器可视化指南</title><link>https://www.linuxzen.com/go-memory-allocator-visual-guide.html</link><description>&lt;p&gt;当我第一次开始尝试理解 Go 语言的内存分配器时，整个过程让我抓狂。一切看起来都像一个神秘的黑盒子。因为几乎所有 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sat, 23 Feb 2019 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2019-02-23:/go-memory-allocator-visual-guide.html</guid><category>Go</category><category>Go</category><category>memory</category><category>allocator</category></item><item><title>《敏捷革命》读书笔记</title><link>https://www.linuxzen.com/scrum-read-notes.html</link><description>&lt;div class="section" id="section-2"&gt;
&lt;h2&gt;基本过程&lt;/h2&gt;
&lt;div class="section" id="section-3"&gt;
&lt;h3&gt;准备&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;挑选一位 &lt;strong&gt;产品负责人（Product Owner）&lt;/strong&gt; ：负责沟通客户并根据客户反馈规划待办事项&lt;/li&gt;
&lt;li&gt;挑选 &lt;strong&gt;团队&lt;/strong&gt; ：小而精，3 ~ 9 人&lt;/li&gt;
&lt;li&gt;挑选 &lt;strong&gt;Scrum 主 …&lt;/strong&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 15 Feb 2019 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2019-02-15:/scrum-read-notes.html</guid><category>Other</category><category>Scrum</category><category>Agile</category><category>敏捷</category><category>阅读</category></item><item><title>通过 acme.sh 获取 Let's Encrypt 免费证书</title><link>https://www.linuxzen.com/use-acme-sh-to-issue-letsencrypt-cert.html</link><description>&lt;div class="section" id="nginx-webroot"&gt;
&lt;h2&gt;配置 Nginx 正确处理 Webroot 验证&lt;/h2&gt;
&lt;p&gt;在证书签发过程中 Let's Encrypt 会验证你拥有当前域名，最基本的方式在你的网站根目录创建一个文件 …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Tue, 12 Feb 2019 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2019-02-12:/use-acme-sh-to-issue-letsencrypt-cert.html</guid><category>Linux</category><category>SSL</category><category>HTTPS</category></item><item><title>Docker Snippets</title><link>https://www.linuxzen.com/docker-snippets.html</link><description>&lt;p class="first last"&gt;分享关于 Docker 的一些坑&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Mon, 11 Feb 2019 17:30:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2019-02-11:/docker-snippets.html</guid><category>Linux</category><category>docker</category><category>snippets</category></item><item><title>Go 1.5 内存清除汇编源码注释</title><link>https://www.linuxzen.com/golang-105-memclr-assembly-comment.html</link><description>&lt;p class="first last"&gt;Go 为了实现内存复用会将已经回收到 cache 的内存清除，清除逻辑使用汇编实现，本文是基于自己的理解进行的注释。&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Mon, 11 Feb 2019 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2019-02-11:/golang-105-memclr-assembly-comment.html</guid><category>Go</category><category>golang</category><category>go</category><category>源码</category><category>plan9 汇编</category><category>内存清除</category><category>memclr</category></item><item><title>修改本地 Git 历史</title><link>https://www.linuxzen.com/xiu-gai-ben-di-git-li-shi.html</link><description>&lt;blockquote&gt;
&lt;p&gt;很早之前一篇发表在内部的文章，抽时间整理了一下发布出来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;以下操作会修改提交历史, 可能会造成一些不可恢复的问 …&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Wed, 21 Nov 2018 16:33:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2018-11-21:/xiu-gai-ben-di-git-li-shi.html</guid><category>Git</category><category>Git</category></item><item><title>通过 pyenv 在生产环境安装 Python 3</title><link>https://www.linuxzen.com/tong-guo-pyenv-zai-sheng-chan-huan-jing-an-zhuang-python-3.html</link><description>&lt;p&gt;&lt;a href="https://github.com/pyenv/pyenv"&gt;pyenv&lt;/a&gt; 是一个简单的 Python 版本管理, 可以安装对应版本的 Python 不依赖系统的包管理, 我用它来在生产和测试环境安装  Python 3.6.&lt;/p&gt;
&lt;p&gt;它的 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Wed, 21 Nov 2018 15:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2018-11-21:/tong-guo-pyenv-zai-sheng-chan-huan-jing-an-zhuang-python-3.html</guid><category>Python</category><category>Python</category><category>2to3</category></item><item><title>解决 macOS 下安装 pycurl 后导入错误</title><link>https://www.linuxzen.com/jie-jue-macos-xia-an-zhuang-pycurl-hou-dao-ru-cuo-wu.html</link><description>&lt;p&gt;在 macOS 下安装 PycURL 后 &lt;code&gt;import curl&lt;/code&gt; 会提示:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ImportError&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pycurl&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;libcurl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;7.43&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;older&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;than&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;7.49&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这是因为系统中的 curl 版本过老导致, 可以通过使 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Tue, 20 Nov 2018 15:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2018-11-20:/jie-jue-macos-xia-an-zhuang-pycurl-hou-dao-ru-cuo-wu.html</guid><category>Python</category><category>pycurl</category><category>macOS</category><category>OSX</category></item><item><title>从单一软件到处处实践 GTD</title><link>https://www.linuxzen.com/practice-gtd-everywhere.html</link><description>&lt;blockquote&gt;
&lt;p&gt;这篇文章首发于我们团队内部。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;刚开始接触 &lt;a href="https://zh.wikipedia.org/wiki/%E5%B0%BD%E7%AE%A1%E5%8E%BB%E5%81%9A"&gt;GTD&lt;/a&gt; 时我是找了一个软件来实践 GTD，
但是效果不是特别好，主要三点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;收集麻烦&lt;/li&gt;
&lt;li&gt;需 …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sun, 05 Aug 2018 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2018-08-05:/practice-gtd-everywhere.html</guid><category>Other</category><category>GTD</category><category>高效</category></item><item><title>创业公司技术进化之路</title><link>https://www.linuxzen.com/development-eveloping-in-startup.html</link><description>&lt;p class="first last"&gt;本文分享创业公司在技术层面的进化之路。包括技术选型、技术迁移和 CI/CD。&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sat, 04 Aug 2018 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2018-08-04:/development-eveloping-in-startup.html</guid><category>Python</category><category>Python</category><category>技术选型</category><category>CI/CD</category><category>GitLab</category></item><item><title>迁移到 Python 3</title><link>https://www.linuxzen.com/qian-yi-dao-python-3.html</link><description>&lt;p&gt;前段时间(2017-06-07)我开始决定将公司现有的项目逐渐的迁移到 Python 3. 主要原因有一下几点:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Python 3.6 新增了一些新的特性我很喜 …&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Thu, 13 Jul 2017 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2017-07-13:/qian-yi-dao-python-3.html</guid><category>Python</category><category>2to3</category></item><item><title>Python github 私有项目通过 buildbot 进行 Review</title><link>https://www.linuxzen.com/python-github-si-you-xiang-mu-tong-guo-buildbot-jin-xing-review.html</link><description>&lt;h2 id="_1"&gt;背景&lt;/h2&gt;
&lt;p&gt;随着公司开发团队的壮大, 团队中每个人的水平参差不齐, 为了保证项目质量我们打算对
提交的代码进行 review, 但是苦 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sun, 22 May 2016 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2016-05-22:/python-github-si-you-xiang-mu-tong-guo-buildbot-jin-xing-review.html</guid><category>Python</category><category>Python</category><category>github</category><category>私有</category><category>可持续集成</category><category>homu</category><category>buildbot</category><category>review</category></item><item><title>Python mock 使用心得</title><link>https://www.linuxzen.com/python-mock-shi-yong-xin-de.html</link><description>&lt;p&gt;好久没有更新博客, 趁着清明节小长假和我儿子正在睡觉更新一篇刷刷存在感.
近来变化很多, 儿子也有了, 工作上也有很 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sun, 03 Apr 2016 11:42:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2016-04-03:/python-mock-shi-yong-xin-de.html</guid><category>Python</category><category>Python</category><category>mock</category><category>unittest</category></item><item><title>Python 内存泄露实战分析</title><link>https://www.linuxzen.com/python-nei-cun-xie-lu-shi-zhan-fen-xi.html</link><description>&lt;h2 id="_1"&gt;引子&lt;/h2&gt;
&lt;p&gt;之前一直盲目的认为 Python 不会存在内存泄露, 但是眼看着上线的项目随着运行时间的增长
而越来越大的内存占用, 我 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Mon, 30 Mar 2015 17:29:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2015-03-30:/python-nei-cun-xie-lu-shi-zhan-fen-xi.html</guid><category>Python</category><category>Python</category><category>内存</category><category>泄露</category><category>引用</category><category>回收</category><category>交叉</category></item><item><title>logging 模块误用导致的内存泄露</title><link>https://www.linuxzen.com/logging-mo-kuai-wu-yong-dao-zhi-de-nei-cun-xie-lu.html</link><description>&lt;p&gt;首先介绍下怎么发现的吧, 线上的项目日志是通过 &lt;code&gt;logging&lt;/code&gt; 模块打到 syslog 里, 
跑了一段时间后发现 syslog 的 UDP 连接超过了 8W, 没错是 8 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sat, 31 Jan 2015 10:58:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2015-01-31:/logging-mo-kuai-wu-yong-dao-zhi-de-nei-cun-xie-lu.html</guid><category>Python</category><category>Python</category><category>logging</category><category>内存泄露</category></item><item><title>基于 Python 生成器的 Tornado 协程异步</title><link>https://www.linuxzen.com/ji-yu-python-sheng-cheng-qi-de-tornado-xie-cheng-yi-bu.html</link><description>&lt;p&gt;&lt;a href="http://www.tornadoweb.org/en/branch4.0/releases/v4.0.0.html"&gt;Tornado 4.0&lt;/a&gt; 已经发布了很长一段时间了,
新版本广泛的应用了协程(&lt;code&gt;Future&lt;/code&gt;)特性.  我们目前已经将 Tornado 升级到最新版本, 而且也大量的 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 19 Dec 2014 17:15:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2014-12-19:/ji-yu-python-sheng-cheng-qi-de-tornado-xie-cheng-yi-bu.html</guid><category>Python</category><category>Python</category><category>generator</category><category>coroutine</category><category>协程</category><category>生成器</category><category>Tornado</category></item><item><title>Python 入门指南</title><link>https://www.linuxzen.com/python-ru-men-zhi-nan.html</link><description>&lt;h1 id="_1"&gt;引子&lt;/h1&gt;
&lt;p&gt;经常能在 Python 群里看到很多新人在问一些非常基础的问题, 基本每天都在重复的问这些问题,
在这里就总结一下这些 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 23 May 2014 14:29:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2014-05-23:/python-ru-men-zhi-nan.html</guid><category>Python</category><category>Python</category><category>入门</category><category>指南</category><category>新手</category><category>错误</category><category>书籍</category><category>工具</category></item><item><title>PyQt 中用 QtNetwork 异步发起HTTP请求</title><link>https://www.linuxzen.com/pyqt-zhong-yong-qtnetwork-yi-bu-fa-qi-httpqing-qiu.html</link><description>&lt;h2 id="_1"&gt;引子&lt;/h2&gt;
&lt;p&gt;最近有需求要在 PyQt 中请求一个链接, 因为比较简单直接用 urllib2 处理了, 但是 urllib2 在
有延时的时候会造成 GUI 界面卡死. 所以 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Wed, 07 May 2014 15:52:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2014-05-07:/pyqt-zhong-yong-qtnetwork-yi-bu-fa-qi-httpqing-qiu.html</guid><category>PyQt</category><category>PyQt</category><category>QtNetwork</category><category>QHttp</category><category>QNetworkAccessManager</category><category>HTTP</category><category>网络</category><category>异步</category></item><item><title>Tornado 多进程实现分析</title><link>https://www.linuxzen.com/tornado-duo-jin-cheng-shi-xian-fen-xi.html</link><description>&lt;h2 id="_1"&gt;引子&lt;/h2&gt;
&lt;p&gt;Tornado 是一个网络异步的的web开发框架, 并且可以利用多进程进行提高效率, 
下面是创建一个多进程 tornado 程序的例子.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding:utf-8 …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 11 Apr 2014 14:35:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2014-04-11:/tornado-duo-jin-cheng-shi-xian-fen-xi.html</guid><category>Python</category><category>Python</category><category>fork_processes</category><category>tornado</category><category>多进程</category><category>web</category><category>提升</category><category>效率</category></item><item><title>记一次 zsh 产生僵尸进程解决</title><link>https://www.linuxzen.com/ji-yi-ci-zsh-chan-sheng-jiang-shi-jin-cheng-jie-jue.html</link><description>&lt;h2 id="_1"&gt;问题描述&lt;/h2&gt;
&lt;p&gt;今天使用 vmplayer 运行了 xp 系统, 关闭后在 zsh 里继续敲命令就阻塞了,
然后就关闭了终端重新打开, 还是阻塞, 重复几次 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 21 Mar 2014 10:47:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2014-03-21:/ji-yi-ci-zsh-chan-sheng-jiang-shi-jin-cheng-jie-jue.html</guid><category>Linux</category><category>zsh</category><category>进程</category><category>阻塞</category><category>命令</category><category>D</category><category>僵尸</category></item><item><title>解决一直崩溃的 Adobe Flash Player</title><link>https://www.linuxzen.com/jie-jue-yi-zhi-beng-kui-de-adobe-flash-player.html</link><description>&lt;p&gt;1月份的时候决定从 Ubuntu 换到 Archlinux, 换完之后 Flash Player 就一直没正常过.
一打开视屏就 crash.  从那之后就一直用手机看视屏, 很别扭, 放着大屏不用一直盯 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Wed, 12 Mar 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2014-03-12:/jie-jue-yi-zhi-beng-kui-de-adobe-flash-player.html</guid><category>Linux</category><category>archlinux</category><category>flash player</category><category>crash</category><category>解决</category></item><item><title>使用 Pygments 对 Vimwiki 进行代码高亮</title><link>https://www.linuxzen.com/shi-yong-pygments-dui-vimwiki-jin-xing-dai-ma-gao-liang.html</link><description>&lt;p&gt;Vimwiki 推荐的代码高亮机制是通过一个 JavaScript 插件来完成的, 那样需要加载很多 js,
所以不想使用, 比较倾向使用 Pygments 在 Vimwiki 生成 HTML 的 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 27 Dec 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-12-27:/shi-yong-pygments-dui-vimwiki-jin-xing-dai-ma-gao-liang.html</guid><category>Vim</category><category>vim</category><category>vimwiki</category><category>pygments</category><category>python</category><category>highlight</category></item><item><title>使用 Vimwiki + git 做知识管理</title><link>https://www.linuxzen.com/shi-yong-vimwiki-git-zuo-zhi-shi-guan-li.html</link><description>&lt;p&gt;一直在找一个合适的知识管理工具, 用过 Evernote, 但是不支持 Markdown, 用了一段时间也放弃了.
最近 python-cn 列表里也在讨论这个问题, 看到 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Thu, 26 Dec 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-12-26:/shi-yong-vimwiki-git-zuo-zhi-shi-guan-li.html</guid><category>Vim</category><category>vim</category><category>vimwiki</category><category>wiki</category><category>知识</category><category>管理</category><category>git</category></item><item><title>将Pelican版本更新到3.3</title><link>https://www.linuxzen.com/jiang-pelicanban-ben-geng-xin-dao-33.html</link><description>&lt;p&gt;记录升级Pelican到3.3的过程和一些吐槽,&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Tue, 24 Dec 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-12-24:/jiang-pelicanban-ben-geng-xin-dao-33.html</guid><category>Python</category><category>pelican3.3</category><category>升级</category></item><item><title>PyQt + QML 快速开发GUI总结</title><link>https://www.linuxzen.com/pyqt-qml-kuai-su-kai-fa-guizong-jie.html</link><description>&lt;p&gt;最近结束一个使用PyQt+QML开发的项目, 在此对一些经验做出总结分享出来.
结合QML确实可以快速的构建出GUI程序, 但是相关资料太少, 特别是中文资料,
而且坑太多, 特别 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Wed, 06 Nov 2013 15:25:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-11-06:/pyqt-qml-kuai-su-kai-fa-guizong-jie.html</guid><category>PyQt</category><category>QML</category><category>PyQt</category><category>Gui</category><category>Python</category><category>Qt</category></item><item><title>推荐几款最近发现非常酷的Vim插件</title><link>https://www.linuxzen.com/tui-jian-ji-kuan-zui-jin-fa-xian-fei-chang-ku-de-vimcha-jian.html</link><description>&lt;p&gt;最近看一个github上的Vim配置, 发现了几款非常酷而且非常有用的Vim插件:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;delimitMate
用于补全括号和引号&lt;/li&gt;
&lt;li&gt;vim-surround
用于快速切换括号/引号或者标签&lt;/li&gt;
&lt;li&gt;GitGutter
实时 …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 18 Oct 2013 13:14:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-10-18:/tui-jian-ji-kuan-zui-jin-fa-xian-fei-chang-ku-de-vimcha-jian.html</guid><category>Vim</category><category>Vim</category><category>插件</category><category>酷</category><category>缩进对齐线</category><category>Git</category><category>surround</category><category>delimitMate</category></item><item><title>Vim 相对行号</title><link>https://www.linuxzen.com/vim-xiang-dui-xing-hao.html</link><description>&lt;p class="first last"&gt;大家在用Vim时是否会遇到想复制多行或者想快速向下/向上移动多行时而不知道行数的情况, 相对行号将帮助你轻易的完成类似的任务&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Wed, 09 Oct 2013 14:50:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-10-09:/vim-xiang-dui-xing-hao.html</guid><category>Vim</category><category>Vim</category><category>相对</category><category>行号</category></item><item><title>PyQt4 信号和槽详解</title><link>https://www.linuxzen.com/pyqt4-xin-hao-he-cao-xiang-jie.html</link><description>&lt;p class="first last"&gt;最近在开发一个基于 &lt;tt class="docutils literal"&gt;PyQt4&lt;/tt&gt; 的的 GUI程序, 使用过程中一些对信号和槽的理解分享给大家&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sun, 22 Sep 2013 10:10:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-09-22:/pyqt4-xin-hao-he-cao-xiang-jie.html</guid><category>PyQt</category><category>PyQt4</category><category>信号</category><category>槽</category><category>Qt</category><category>Python</category><category>GUI</category></item><item><title>Linux 下 Python 实现按任意键退出</title><link>https://www.linuxzen.com/linux-xia-python-shi-xian-an-ren-yi-jian-tui-chu.html</link><description>&lt;p&gt;初学Python时在总想实现一个按任意键继续/退出的程序(受.bat毒害), 奈何一直写不出来, 最近学习Unix C时发现可以通过&lt;code&gt;termios.h&lt;/code&gt;库来实现, 尝试一下发现Python也有这个库, 所以终于写出一个这样的程序 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Tue, 20 Aug 2013 09:54:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-08-20:/linux-xia-python-shi-xian-an-ren-yi-jian-tui-chu.html</guid><category>Python</category><category>Python</category><category>Linux</category><category>任意键</category><category>退出</category><category>按</category></item><item><title>Vim 代码补全和检查: YouCompleteMe &amp; syntastic</title><link>https://www.linuxzen.com/vim-dai-ma-bu-quan-he-jian-cha-youcompleteme-syntastic.html</link><description>&lt;p&gt;Vim 7.4 发布, 最近升级了Vim, 并安装了YouCompleteMe和Syntastic插件, 这里记录下过程&lt;/p&gt;
&lt;h2 id="vim"&gt;升级Vim&lt;/h2&gt;
&lt;p&gt;YouCompleteMe 需要Vim 7.3.584+的支持, 并且开启 +python , 可以通过&lt;code&gt;:version&lt;/code&gt;查看
升级 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Wed, 14 Aug 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-08-14:/vim-dai-ma-bu-quan-he-jian-cha-youcompleteme-syntastic.html</guid><category>Vim</category><category>Vim</category><category>补全</category><category>7.4</category><category>升级</category><category>检查</category><category>C语言</category><category>YouCompleteMe</category><category>syntastic</category></item><item><title>发布一个基于Tornado的高效异步的HTTP客户端库</title><link>https://www.linuxzen.com/fa-bu-yi-ge-ji-yu-tornadode-gao-xiao-yi-bu-de-httpke-hu-duan-ku.html</link><description>&lt;p&gt;前面的博文提到过&lt;a href="/shi-yong-tornadojin-xing-wang-luo-yi-bu-bian-cheng.html"&gt;使用tornado进行网络异步编程&lt;/a&gt;, 也&lt;a href="/jie-yong-tornadoshi-xian-gao-xiao-de-webqqji-qi-ren.html"&gt;使用tornado实现了一个高效的WebQQ机器人&lt;/a&gt;, 由于tornado内置的&lt;code&gt;AsyncHTTPClient&lt;/code&gt;功能过于单一, 所以自己写了一个基于Tornado的HTTP客户端库, 鉴于自己多处使用了这个库, 所以 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Thu, 01 Aug 2013 10:46:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-08-01:/fa-bu-yi-ge-ji-yu-tornadode-gao-xiao-yi-bu-de-httpke-hu-duan-ku.html</guid><category>Python</category><category>tornado</category><category>http</category><category>client</category><category>module</category><category>Python</category><category>高效</category></item><item><title>解决git提交敏感信息(回退git版本库到某一个commit)</title><link>https://www.linuxzen.com/jie-jue-gitti-jiao-min-gan-xin-xi-hui-tui-gitban-ben-ku-dao-mou-yi-ge-commit.html</link><description>&lt;p&gt;git是一个很好的版本库, 现在很多人用它, 并在github上创建项目, 相信大家都有过将敏感信息提交版本的经历, 如何删除? 好像只有删除版本库来解决, 其实我们 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 07 Jun 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-06-07:/jie-jue-gitti-jiao-min-gan-xin-xi-hui-tui-gitban-ben-ku-dao-mou-yi-ge-commit.html</guid><category>git</category><category>git</category><category>敏感信息</category><category>回退</category><category>commit</category><category>版本库</category></item><item><title>Pual 更新支持SimSimi可以进行互动</title><link>https://www.linuxzen.com/pual-geng-xin-zhi-chi-simsimike-yi-jin-xing-hu-dong.html</link><description>&lt;p&gt;&lt;a href="http://www.linuxzen.com/jie-yong-tornadoshi-xian-gao-xiao-de-webqqji-qi-ren.html"&gt;Pual&lt;/a&gt; 跑了许久, 通过一段时间的修改现在Pual主要支持以下功能:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;英汉互译&lt;/li&gt;
&lt;li&gt;为每个用户分配一个session的含有上下文的Python shell&lt;/li&gt;
&lt;li&gt;贴代码&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;总而言之就是一个被动型的辅助机 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Thu, 30 May 2013 09:50:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-05-30:/pual-geng-xin-zhi-chi-simsimike-yi-jin-xing-hu-dong.html</guid><category>Python</category><category>Pual</category><category>Python</category><category>bot</category><category>SimSimi</category></item><item><title>说说Python装饰器</title><link>https://www.linuxzen.com/shuo-shuo-pythonzhuang-shi-qi.html</link><description>&lt;p&gt;装饰器对与Python新手以至于熟悉Python的人都是一个难理解, 难写的东西. 那么今天就分享一下我对Python 装饰器的理解&lt;/p&gt;
&lt;p&gt;所谓装饰器仅仅是一种语法糖, 可作用的对象可以 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Mon, 20 May 2013 14:52:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-05-20:/shuo-shuo-pythonzhuang-shi-qi.html</guid><category>Python</category><category>Python</category><category>装饰器</category></item><item><title>clubot更新: 使用SQLAlchemy重写数据库部分和改用Tornado MainLoop</title><link>https://www.linuxzen.com/clubotgeng-xin-shi-yong-sqlalchemyzhong-xie-shu-ju-ku-bu-fen-he-gai-yong-tornado-mainloop.html</link><description>&lt;p&gt;&lt;a href="/python-shi-yong-pyxmpp2bian-xie-gtalkqun.html"&gt;clubot&lt;/a&gt;在我的vps上跑了有一段时间了, 最近接触了&lt;code&gt;SQLAlchemy&lt;/code&gt; 然后反观&lt;code&gt;clubot&lt;/code&gt;的数据库代码部分, 感觉代码又遭有乱实在看不过眼, 所以就使用&lt;code&gt;SQLAlchemy&lt;/code&gt;重写了数据库 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 26 Apr 2013 15:40:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-04-26:/clubotgeng-xin-shi-yong-sqlalchemyzhong-xie-shu-ju-ku-bu-fen-he-gai-yong-tornado-mainloop.html</guid><category>Python</category><category>clubot</category><category>pyxmpp2</category><category>gtalk</category><category>xmpp</category><category>更新</category><category>重写</category><category>SQLAlchemy</category><category>tornado</category></item><item><title>SQLAlchemy MySQL数据库乱码解决</title><link>https://www.linuxzen.com/sqlalchemy-mysqlshu-ju-ku-luan-ma-jie-jue.html</link><description>&lt;p&gt;今天对&lt;a href="/python-shi-yong-pyxmpp2bian-xie-gtalkqun.html"&gt;clubot&lt;/a&gt;进行了&lt;a href="/clubotgeng-xin-shi-yong-sqlalchemyzhong-xie-shu-ju-ku-bu-fen-he-gai-yong-tornado-mainloop.html"&gt;升级&lt;/a&gt;, 但是导入数据后中文乱码, 一开是找资料说是在创建引擎的时候添加编码信息:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;engine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_engine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mysql://root:@localhost:3306/clubot?charset …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 26 Apr 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-04-26:/sqlalchemy-mysqlshu-ju-ku-luan-ma-jie-jue.html</guid><category>Python</category><category>sqlalchemy</category><category>MySQL</category><category>数据库</category><category>乱码</category><category>utf8</category></item><item><title>grep挽救了我一个下午: 恢复rm -f删除的代码</title><link>https://www.linuxzen.com/grepwan-jiu-liao-wo-yi-ge-xia-wu-hui-fu-rm-fshan-chu-de-dai-ma.html</link><description>&lt;p&gt;今天对代码进行重构, 新添加了一个&lt;code&gt;logics.py&lt;/code&gt;模块, 但并没有加入到git库中,  然后对代码进行清理, 有一个&lt;code&gt;logs&lt;/code&gt;文件夹是不需要的所以 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Thu, 25 Apr 2013 14:36:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-04-25:/grepwan-jiu-liao-wo-yi-ge-xia-wu-hui-fu-rm-fshan-chu-de-dai-ma.html</guid><category>Linux</category><category>Linux</category><category>grep</category><category>rm</category><category>-f</category><category>恢复</category></item><item><title>借用Tornado实现高效的WebQQ机器人</title><link>https://www.linuxzen.com/jie-yong-tornadoshi-xian-gao-xiao-de-webqqji-qi-ren.html</link><description>&lt;p&gt;之前有写过一篇文章介绍使用&lt;code&gt;Pyxmpp2&lt;/code&gt;桥接QQ和xmpp的文章(&lt;a href="/shi-yong-webqqxie-yi-qiao-jie-xmpphe-qqqun.html"&gt;这里&lt;/a&gt;).后来我打算将WebQQ单独出来运行, 一开始直接拷贝了&lt;code&gt;pyxmpp2&lt;/code&gt;的mainloop, 但是跑起来问题多多, 所以我又 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Tue, 23 Apr 2013 13:36:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-04-23:/jie-yong-tornadoshi-xian-gao-xiao-de-webqqji-qi-ren.html</guid><category>Python</category><category>tornado</category><category>高效</category><category>webqq</category><category>并发</category><category>协议</category></item><item><title>使用Pelican打造静态博客</title><link>https://www.linuxzen.com/shi-yong-pelicanda-zao-jing-tai-bo-ke.html</link><description>&lt;p&gt;前面有文章介绍本站采用了&lt;code&gt;Python&lt;/code&gt;编写的&lt;code&gt;Pelican&lt;/code&gt;静态生成博客系统, 之所以没有使用当前很火的&lt;code&gt;Jekyll&lt;/code&gt;, 是因为它是&lt;code&gt;Ruby&lt;/code&gt;编写, 而我又对 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Thu, 18 Apr 2013 09:40:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-04-18:/shi-yong-pelicanda-zao-jing-tai-bo-ke.html</guid><category>Python</category><category>Python</category><category>静态</category><category>生成</category><category>Pelican</category><category>博客</category></item><item><title>使用Tornado进行网络异步编程</title><link>https://www.linuxzen.com/shi-yong-tornadojin-xing-wang-luo-yi-bu-bian-cheng.html</link><description>&lt;h2 id="tornado"&gt;Tornado&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Tornado&lt;/code&gt; 是一款非阻塞可扩展的使用Python编写的web服务器和Python Web框架, 可以使用&lt;code&gt;Tornado&lt;/code&gt;编写Web程序并不依赖任何web服务器直接提供高效的web服务.所以&lt;code&gt;Tornado&lt;/code&gt;不仅仅是一个web框架而且还是一款可以用于生产环境的高效的web服务器&lt;/p&gt;
&lt;p&gt;Torando 在Linux和FreeBSD上使用高效的异步I/O模型 &lt;code&gt;epoll&lt;/code&gt; 和&lt;code&gt;kqueue&lt;/code&gt;来实现高效的web服务器, 所以 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Mon, 15 Apr 2013 16:09:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-04-15:/shi-yong-tornadojin-xing-wang-luo-yi-bu-bian-cheng.html</guid><category>Python</category><category>Python</category><category>tornado</category><category>网络</category><category>异步</category><category>编程</category></item><item><title>使用WebQQ协议桥接XMPP和QQ群</title><link>https://www.linuxzen.com/shi-yong-webqqxie-yi-qiao-jie-xmpphe-qqqun.html</link><description>&lt;h2 id="_1"&gt;介绍&lt;/h2&gt;
&lt;p&gt;无意中看见有人利用WebQQ协议开发出Linux下Pidgin的插件, 让Pidgin来收发QQ消息, 突然想将&lt;a href="/python-shi-yong-pyxmpp2bian-xie-gtalkqun.html"&gt;clubot&lt;/a&gt;和QQ群来桥接起来一定非常有趣,这样就可以通过gtalk收发QQ来的消息, 不过前期还是想将&lt;code&gt;clubot&lt;/code&gt;和QQ群桥接起来.&lt;/p&gt;
&lt;h2 id="_2"&gt;实施&lt;/h2&gt;
&lt;p&gt;想到了就开始弄呗 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Thu, 14 Mar 2013 16:09:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-03-14:/shi-yong-webqqxie-yi-qiao-jie-xmpphe-qqqun.html</guid><category>Python</category><category>WebQQ</category><category>xmpp</category><category>python</category><category>XMPP</category><category>pyxmpp2</category></item><item><title>使用Pelican博客静态生成系统</title><link>https://www.linuxzen.com/shi-yong-pelicanbo-ke-jing-tai-sheng-cheng-xi-tong.html</link><description>&lt;h1 id="_1"&gt;介绍&lt;/h1&gt;
&lt;p&gt;最近流行使用静态生成的博客, 看了很多感觉很棒总想尝试一下, 大名鼎鼎的&lt;code&gt;Jekyll&lt;/code&gt;使用ruby,看了很多文档介绍,依旧不能 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Thu, 14 Mar 2013 15:12:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-03-14:/shi-yong-pelicanbo-ke-jing-tai-sheng-cheng-xi-tong.html</guid><category>Python</category><category>博客</category><category>Pelican</category><category>静态</category><category>迁移</category></item><item><title>vLog 一个使用Python编写的轻量级博客系统</title><link>https://www.linuxzen.com/vlog-yi-ge-shi-yong-pythonbian-xie-de-qing-liang-ji-bo-ke-xi-tong.html</link><description>&lt;h2 id="_1"&gt;介绍&lt;/h2&gt;
&lt;h3 id="vlog"&gt;何为vLog&lt;/h3&gt;
&lt;p&gt;大家有人可能注意到博客改变了,是的前面也有文章提到从wordpress迁移到vlog,但是何为vLog这里给大家简要的说明一下,vLog是我使用&lt;code&gt;Python&lt;/code&gt;的&lt;code&gt;tornado&lt;/code&gt;框架和&lt;code&gt;Jinja2&lt;/code&gt;模板引擎,基于 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Tue, 05 Feb 2013 16:43:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-02-05:/vlog-yi-ge-shi-yong-pythonbian-xie-de-qing-liang-ji-bo-ke-xi-tong.html</guid><category>Python</category><category>vLog</category><category>tornado</category><category>blog</category><category>博客</category><category>轻量</category><category>markdown</category></item><item><title>使用更加高效的epoll作为pyxmpp2的主循环</title><link>https://www.linuxzen.com/shi-yong-geng-jia-gao-xiao-de-epollzuo-wei-pyxmpp2de-zhu-xun-huan.html</link><description>&lt;h2 id="_1"&gt;引子&lt;/h2&gt;
&lt;p&gt;之前&lt;a href="/python-shi-yong-pyxmpp2bian-xie-gtalkqun.html"&gt;clubot&lt;/a&gt;使用的pyxmpp2的默认mainloop也就是一个poll的主循环,但是&lt;code&gt;clubot&lt;/code&gt;上线后资源占用非常厉害,使用&lt;code&gt;strace&lt;/code&gt;跟踪发现&lt;code&gt;clubot&lt;/code&gt;在不停的&lt;code&gt;poll&lt;/code&gt;,查看&lt;code&gt;pyxmpp2&lt;/code&gt;代码发现&lt;code&gt;pyxmpp2&lt;/code&gt;的&lt;code&gt;poll&lt;/code&gt;在使用超 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Tue, 05 Feb 2013 16:06:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-02-05:/shi-yong-geng-jia-gao-xiao-de-epollzuo-wei-pyxmpp2de-zhu-xun-huan.html</guid><category>Python</category><category>epoll</category><category>python</category><category>gtalk</category><category>群</category><category>Linux</category><category>clubot</category></item><item><title>Python 重复安装包报错</title><link>https://www.linuxzen.com/python-zhong-fu-an-zhuang-bao-bao-cuo.html</link><description>&lt;p&gt;最近写程序用到argparse总是会报错&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/usr/lib/python2.7/dist-packages/pygments/plugin.py:39: UserWarning: Module argparse was already imported from /usr/lib/python2.7/argparse.pyc, but /usr/local/lib/python2.7/dist-packages is being added to sys.path
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;一开始也没怎么 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 25 Jan 2013 14:55:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-01-25:/python-zhong-fu-an-zhuang-bao-bao-cuo.html</guid><category>Python</category><category>python</category><category>包</category><category>重复</category><category>安装</category><category>卸载</category></item><item><title>Linux 下使用Python截图自动分享</title><link>https://www.linuxzen.com/linux-xia-shi-yong-pythonjie-tu-zi-dong-fen-xiang.html</link><description>&lt;h2 id="_1"&gt;引子&lt;/h2&gt;
&lt;p&gt;Linux下不支持QQ等功能丰富的IM,虽然可以通过wine运行QQ2012,但是还是喜欢在gtalk群中聊天,gtalk群不支持图片方式,这就要靠我们大家自己来解决了,&lt;a href="http://eleveni386.7axu.com"&gt;eleven&lt;/a&gt;开放了一个Image上传和显示接口,提供了使用&lt;code&gt;curl&lt;/code&gt;来解决,但 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Tue, 22 Jan 2013 16:59:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-01-22:/linux-xia-shi-yong-pythonjie-tu-zi-dong-fen-xiang.html</guid><category>Python</category><category>Linux</category><category>scrot</category><category>截图</category><category>python</category></item><item><title>vLog使用Tornado框架结合memcached缓存页面</title><link>https://www.linuxzen.com/vlogshi-yong-tornadokuang-jia-jie-he-memcachedhuan-cun-ye-mian.html</link><description>&lt;h2 id="_1"&gt;原因&lt;/h2&gt;
&lt;p&gt;Blog是一个更新并不很频繁的一套系统,但是每次刷新页面都要更新数据库反而很浪费资源,添加静态页面生成是一个解决办法,同时缓存是一个更好的 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Wed, 16 Jan 2013 16:14:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-01-16:/vlogshi-yong-tornadokuang-jia-jie-he-memcachedhuan-cun-ye-mian.html</guid><category>Python</category><category>Linux</category><category>python</category><category>Memcached</category><category>pylibmc</category><category>缓存</category><category>vLog</category></item><item><title>Vim配置系列(二) —- 好看的statusline</title><link>https://www.linuxzen.com/vimpei-zhi-xi-lie-er-hao-kan-de-statusline.html</link><description>&lt;p&gt;Vim是一款文本编辑器,但是这并不影响它有一个好看的外观,大家都知道Vim可以通过配色方案来改变Vim的外观,满足一些‘好色之徒’,之前大家可能也主意到截图中一个非常漂亮 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sat, 05 Jan 2013 15:01:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-01-05:/vimpei-zhi-xi-lie-er-hao-kan-de-statusline.html</guid><category>Vim</category><category>配置</category><category>系列</category><category>漂亮</category><category>插件</category><category>vim</category><category>statusline</category><category>Powerline</category></item><item><title>Vim 结合Python编写的翻译插件</title><link>https://www.linuxzen.com/vim-jie-he-pythonbian-xie-de-fan-yi-cha-jian.html</link><description>&lt;p&gt;最近重写了一下之前用Python写的一个终端翻译工具,想着Vim7.3 支持Python于是想将这个功能写为一个插件让Vim也支持翻译功能,现在英汉翻译比较完善, &lt;Leader&gt;t会翻译光标下单词,选中的翻译还不完善,仅仅是个半成品,在此抛砖引 …&lt;/leader&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 04 Jan 2013 17:58:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2013-01-04:/vim-jie-he-pythonbian-xie-de-fan-yi-cha-jian.html</guid><category>Vim</category><category>翻译</category><category>插件</category><category>vim</category><category>python</category></item><item><title>Vim配置系列(一) ---- 插件管理</title><link>https://www.linuxzen.com/vimpei-zhi-xi-lie-yi-cha-jian-guan-li.html</link><description>&lt;p&gt;最近对Vim进行了一番较大的配置变动,所以就想写出一个系列来将配置过程分享下来,供需要的朋友参考.我们之前配置Vim插件是一大助力,可以帮助我们做一些比较 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 14 Dec 2012 08:57:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-12-14:/vimpei-zhi-xi-lie-yi-cha-jian-guan-li.html</guid><category>Vim</category><category>配置</category><category>系列</category><category>管理</category><category>插件</category><category>Vundle</category><category>vim</category><category>Bundle</category></item><item><title>Vim打开Python源码自动添加#!行和编码行 升级版</title><link>https://www.linuxzen.com/vimda-kai-pythonyuan-ma-zi-dong-tian-jia-xing-he-bian-ma-xing-sheng-ji-ban.html</link><description>&lt;p&gt;之前给大家分享过一个打开Python源代码时自动添加#!行和编码行来避免一些重复的工作,那个是因为需要大量编写时临时的解决方案,后来使 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Thu, 13 Dec 2012 14:31:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-12-13:/vimda-kai-pythonyuan-ma-zi-dong-tian-jia-xing-he-bian-ma-xing-sheng-ji-ban.html</guid><category>Vim</category><category>自动</category><category>编码信息</category><category>添加</category><category>vim</category><category>shbang line</category><category>python</category></item><item><title>Awesome+tmux+gnomeDo打造高效Linux桌面环境</title><link>https://www.linuxzen.com/awesometmuxgnomedoda-zao-gao-xiao-linuxzhuo-mian-huan-jing.html</link><description>&lt;h2 id="_1"&gt;引言&lt;/h2&gt;
&lt;p&gt;近期一直在Linux下工作,使用Ubuntu 11.10,经过一段时间的使用和磨合,终于打造出一套适合自己的高效Linux桌面环境,之前也在博客中零散的 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Tue, 04 Dec 2012 13:21:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-12-04:/awesometmuxgnomedoda-zao-gao-xiao-linuxzhuo-mian-huan-jing.html</guid><category>Linux</category><category>高效</category><category>桌面</category><category>Tmux</category><category>Linux</category><category>gnome do</category><category>awesome</category></item><item><title>AppArmor引起的无法启动Evince</title><link>https://www.linuxzen.com/apparmoryin-qi-de-wu-fa-qi-dong-evince.html</link><description>&lt;p&gt;今天在Ubuntu上使用文档查看器(Evince),总是打开没有响应,在命令行下使用命令:
evince
却提示:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;No protocol specified
Cannot parse arguments: 无法打开显示：
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;google说是$XAUTHORITY权限的问题,于是查看:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ls&lt;span class="w"&gt; &lt;/span&gt;-l&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$XAUTHORITY&lt;/span&gt;
-rw-------&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;vim …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Thu, 15 Nov 2012 16:05:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-11-15:/apparmoryin-qi-de-wu-fa-qi-dong-evince.html</guid><category>Linux</category><category>Ubuntu</category><category>evince</category><category>apparmor</category></item><item><title>python 使用pyxmpp2编写gtalk群</title><link>https://www.linuxzen.com/python-shi-yong-pyxmpp2bian-xie-gtalkqun.html</link><description>&lt;p&gt;gtalk是一款google开发的基于xmpp协议的聊天软件,其优点就是协议开源,我们可以通过任何支持xmpp的客户端协议来链接gtalk,但是gtalk不支持群聊天,所以各路高手都会自己来开发一个机器人来支持群功能.&lt;/p&gt;
&lt;p&gt;其实 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Mon, 29 Oct 2012 14:48:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-10-29:/python-shi-yong-pyxmpp2bian-xie-gtalkqun.html</guid><category>Python</category><category>群</category><category>xmpp</category><category>pyxmpp2</category><category>python</category><category>gtalk</category><category>bot</category></item><item><title>Linux高效工作----平铺式窗体管理器Awesome</title><link>https://www.linuxzen.com/linuxgao-xiao-gong-zuo-ping-pu-shi-chuang-ti-guan-li-qi-awesome.html</link><description>&lt;p&gt;在Linux桌面环境下开发,总想更高效的工作,我已经装备了Gnome Do和terminator,但是我还是觉得不够快我更加希望能解放右手(当然不是找个妹子戒撸,只是 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Thu, 25 Oct 2012 10:23:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-10-25:/linuxgao-xiao-gong-zuo-ping-pu-shi-chuang-ti-guan-li-qi-awesome.html</guid><category>Linux</category><category>高效</category><category>管理器</category><category>窗体</category><category>桌面</category><category>平铺式</category><category>Linux</category><category>awesome</category></item><item><title>Python将汉字按拼音排序--一个多音字引发的悲剧</title><link>https://www.linuxzen.com/pythonjiang-yi-zi-an-pin-yin-pai-xu-yi-ge-duo-yin-zi-yin-fa-de-bei-ju.html</link><description>&lt;p&gt;今天同事告诉我一个项目需要将汉字按拼音排序,之前没做过啊,就google之,down了一份汉字与拼音的对照表,对照表格式如下:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;拼    pin1
音    yin1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;将文件保存为&lt;code&gt;pinyindata&lt;/code&gt;,于是 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Wed, 24 Oct 2012 18:29:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-10-24:/pythonjiang-yi-zi-an-pin-yin-pai-xu-yi-ge-duo-yin-zi-yin-fa-de-bei-ju.html</guid><category>Python</category><category>汉字排序</category><category>汉字</category><category>排序</category><category>拼音</category><category>多音字</category><category>python</category></item><item><title>部署Tornado时iptables引发的的一个问题</title><link>https://www.linuxzen.com/bu-shu-tornadoshi-iptablesyin-fa-de-de-yi-ge-wen-ti.html</link><description>&lt;p&gt;今天在CentOS上部署了一个Tornado,使用nginx做代理,&lt;/p&gt;
&lt;p&gt;tornado使用8888,端口,使用nginx作为反向代理,配置文件如下:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;server&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kn"&gt;listen&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kn"&gt;server_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;www.linuxzen.com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kn"&gt;location&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;proxy_pass_header&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;proxy_redirect&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;X-Real_IP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$remote_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;X-Scheme&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$scheme&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kn"&gt;proxy_pass&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;http://127.0.0.1:8888&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;iptables filter表的INPUT链是DROP的,所以添加 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sat, 29 Sep 2012 19:11:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-09-29:/bu-shu-tornadoshi-iptablesyin-fa-de-de-yi-ge-wen-ti.html</guid><category>Linux</category><category>tornado</category><category>nginx</category><category>iptables</category><category>bad gateway</category><category>502</category></item><item><title>用Vim为Python源码自动添加#!行和编码行</title><link>https://www.linuxzen.com/yong-vimwei-pythonyuan-ma-zi-dong-tian-jia-xing-he-bian-ma-xing.html</link><description>&lt;p&gt;每次开始写Python打开文件第一件事就是写上&lt;code&gt;#!/usr/bin/env python和&lt;/code&gt;编码之类的东西,&lt;/p&gt;
&lt;p&gt;太多了,写烦就,写了一个打开Python自动填充的函数,将下面内容添加到&lt;code&gt;~/.vimrc&lt;/code&gt;下即可每次打开如果没有 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sat, 29 Sep 2012 18:56:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-09-29:/yong-vimwei-pythonyuan-ma-zi-dong-tian-jia-xing-he-bian-ma-xing.html</guid><category>Vim</category><category>自动</category><category>编码信息</category><category>添加</category><category>vim</category><category>shbang line</category><category>python</category></item><item><title>分享Vim两种好用的功能:状态行和空白字符可见</title><link>https://www.linuxzen.com/fen-xiang-vimliang-chong-hao-yong-de-gong-neng-zhuang-tai-xing-he-kong-bai-zi-fu-ke-jian.html</link><description>&lt;p&gt;马上要放假了,没事折腾了一下Vim发现了两个非常棒的功能,一个是给Vim添加一个状态栏,一个是可以在编辑的时候显示空白,&lt;/p&gt;
&lt;p&gt;我的状态栏显示了:
正在编辑的文件名 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sat, 29 Sep 2012 17:30:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-09-29:/fen-xiang-vimliang-chong-hao-yong-de-gong-neng-zhuang-tai-xing-he-kong-bai-zi-fu-ke-jian.html</guid><category>Vim</category><category>空白</category><category>字符</category><category>可见</category><category>vim</category><category>statusline</category></item><item><title>用Python将绝对URL替换成相对URL</title><link>https://www.linuxzen.com/yong-pythonjiang-jue-dui-urlti-huan-cheng-xiang-dui-url.html</link><description>&lt;p&gt;公司一个项目需要上传图片,一开始同事将图片上传后结合当前主机拼成了一个绝对的URL(&lt;a href="#"&gt;http://192.168.1.1:888/m/getimg?filename=xxx.jpg&lt;/a&gt;由 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sat, 29 Sep 2012 15:52:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-09-29:/yong-pythonjiang-jue-dui-urlti-huan-cheng-xiang-dui-url.html</guid><category>Python</category><category>绝对</category><category>相对</category><category>替换</category><category>url</category><category>python</category></item><item><title>用Python对各种编程语言进行代码高亮</title><link>https://www.linuxzen.com/yong-pythondui-ge-chong-bian-cheng-yu-yan-jin-xing-dai-ma-gao-liang.html</link><description>&lt;p&gt;做了一个在线代码高亮的项目,因为写的Gtalk群Bot需要这个功能支持,贴到第三方怕被人给封,所以干脆想自己写一个,强大的Python一如既往没让我失望,一个强大的Pygments模块可以对多种(很多 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sat, 29 Sep 2012 15:11:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-09-29:/yong-pythondui-ge-chong-bian-cheng-yu-yan-jin-xing-dai-ma-gao-liang.html</guid><category>Python</category><category>高亮</category><category>代码</category><category>python</category><category>pygments</category></item><item><title>Python 优雅的操作字典</title><link>https://www.linuxzen.com/python-you-ya-de-cao-zuo-zi-dian.html</link><description>&lt;p&gt;Python 中的字典是Python中一个键值映射的数据结构,下面介绍一下如何优雅的操作字典.&lt;/p&gt;
&lt;h2 id="11"&gt;1.1 创建字典&lt;/h2&gt;
&lt;p&gt;Python有两种方法可以创建字典,第一种是使用花括号,另一种是使用内建
函数dict&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;info …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Mon, 17 Sep 2012 11:42:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-09-17:/python-you-ya-de-cao-zuo-zi-dian.html</guid><category>Python</category><category>操作</category><category>字典</category><category>优雅</category><category>python</category><category>dict</category></item><item><title>Python 字典和列表陷阱</title><link>https://www.linuxzen.com/python-zi-dian-he-lie-biao-xian-jing.html</link><description>&lt;p&gt;Python 中有三个非常好用的数据结构,列表,元组和字典,
元组是不可变的,列表可以保存任意类型的Python对象,并可以随意扩展没有大 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Mon, 17 Sep 2012 10:22:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-09-17:/python-zi-dian-he-lie-biao-xian-jing.html</guid><category>Python</category><category>陷阱</category><category>引用</category><category>字典</category><category>列表</category><category>python</category></item><item><title>Linux桌面高效工作----使用Gnome DO</title><link>https://www.linuxzen.com/linuxzhuo-mian-gao-xiao-gong-zuo-shi-yong-gnome-do.html</link><description>&lt;p&gt;不知大家是否和我一样在win下系统win+r输入命令来快速启动程序,这两天在Linux下碰到一个比这更爽,更快的软件,&lt;code&gt;Gnome Do&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Gnome Do能根据用户键入的内容进行自动匹配，从而快速打开系统中已有的程序、文件、书签等。不仅如此 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sat, 01 Sep 2012 08:03:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-09-01:/linuxzhuo-mian-gao-xiao-gong-zuo-shi-yong-gnome-do.html</guid><category>Linux</category><category>高效</category><category>桌面</category><category>Linux</category><category>gnome do</category></item><item><title>推荐两款不错的终端软件</title><link>https://www.linuxzen.com/tui-jian-liang-kuan-bu-cuo-de-zhong-duan-ruan-jian.html</link><description>&lt;p&gt;一直在Linux下做开发,一个好用的终端软件能帮你节省很多时间和精力&lt;/p&gt;
&lt;p&gt;作为一个经常喜欢敲命令的人,可能要同时做很多操作,Linux各个桌面的窗口切换有多那啥,这 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Wed, 29 Aug 2012 09:36:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-08-29:/tui-jian-liang-kuan-bu-cuo-de-zhong-duan-ruan-jian.html</guid><category>Linux</category><category>终端</category><category>分割</category><category>terminator</category><category>Linux</category><category>guake</category></item><item><title>用bottle+mongodb写的blog程序支持mysql啦</title><link>https://www.linuxzen.com/yong-bottlemongodbxie-de-blogcheng-xu-zhi-chi-mysqlla.html</link><description>&lt;p&gt;前面博文提到过,本人用bottle+mongodb实现了以blog程序,&lt;/p&gt;
&lt;p&gt;最近有些空闲时间,就重新用mvc的模式重写了一下,因为mongodb太过耗费内存,对一些小型的vps太过吃力所以加入了mysql的支持,&lt;/p&gt;
&lt;p&gt;虽然较上次有些完善,但是还是有很 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Tue, 14 Aug 2012 09:16:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-08-14:/yong-bottlemongodbxie-de-blogcheng-xu-zhi-chi-mysqlla.html</guid><category>Python</category><category>支持mysql</category><category>web</category><category>python</category><category>MySQL</category><category>mongodb</category><category>bottle</category><category>blog</category></item><item><title>python里的三目运算</title><link>https://www.linuxzen.com/pythonli-de-san-mu-yun-suan.html</link><description>&lt;p&gt;下面说的和三目运算有点相似,但又不一样,实在不知道该如何拟定标题,先就是这个标题吧,大家都知道python中没有三目运算,但是&lt;code&gt;and&lt;/code&gt;/&lt;code&gt;or&lt;/code&gt;有点 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 10 Aug 2012 16:28:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-08-10:/pythonli-de-san-mu-yun-suan.html</guid><category>Python</category><category>单行</category><category>三目</category><category>python</category><category>or</category><category>if</category><category>else</category><category>and</category></item><item><title>Python 断点调试</title><link>https://www.linuxzen.com/python-duan-dian-diao-shi.html</link><description>&lt;h2 id="pdb"&gt;pdb模块&lt;/h2&gt;
&lt;p&gt;pdb是一个Python 内置的调式模块这里用来介绍用它进行断点调试&lt;/p&gt;
&lt;h3 id="_1"&gt;插入断点&lt;/h3&gt;
&lt;p&gt;在需要插入断点的地方插入如下代码可以插入一个断 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 10 Aug 2012 16:16:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-08-10:/python-duan-dian-diao-shi.html</guid><category>Python</category><category>调试</category><category>断点</category><category>python</category><category>pdb</category><category>debug</category></item><item><title>ssh证书登录错误</title><link>https://www.linuxzen.com/sshzheng-shu-deng-lu-cuo-wu.html</link><description>&lt;h2&gt;错误描述&lt;/h2&gt;
&lt;p&gt;使用证书ssh链接的时候提示下面错误信息&lt;/p&gt;
&lt;h2&gt;&lt;code&gt;Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).&lt;/code&gt;
可能原因&lt;/h2&gt;
&lt;p&gt;authorizedkeys 或.ssh的权限太open .ssh 目录改成755 权限 authorizedkeys 改成600&lt;/p&gt;
&lt;h2&gt;解决&lt;/h2&gt;
&lt;p&gt;查看日志:
&lt;code&gt;cat /var/log/secure&lt;/code&gt;
发现
&lt;code&gt;Aug 8 17:15 …&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 10 Aug 2012 16:11:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-08-10:/sshzheng-shu-deng-lu-cuo-wu.html</guid><category>Linux</category><category>证书</category><category>权限</category><category>ssh</category><category>authorized_keys</category></item><item><title>lambda 结合map/filter/reduce/sorted等函数对列表进行高效操作</title><link>https://www.linuxzen.com/lambda-jie-he-mapfilterreducesorteddeng-han-shu-dui-lie-biao-jin-xing-gao-xiao-cao-zuo.html</link><description>&lt;p&gt;lambda 结合map/filter/reduce/sorted等函数对列表进行高效操作&lt;/p&gt;
&lt;h2 id="_1"&gt;介绍&lt;/h2&gt;
&lt;h3 id="lambda"&gt;lambda&lt;/h3&gt;
&lt;p&gt;Python用于支持将函数赋值给变量的一个操作符
默认是返回的,所以不用再加return关键字,不然会报错&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# return 4&lt;/span&gt;
&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;需要两个参数,第一个 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 10 Aug 2012 16:02:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-08-10:/lambda-jie-he-mapfilterreducesorteddeng-han-shu-dui-lie-biao-jin-xing-gao-xiao-cao-zuo.html</guid><category>Python</category><category>排序</category><category>列表</category><category>sorted</category><category>reduce</category><category>python</category><category>map</category><category>list</category><category>lambda</category><category>filter</category></item><item><title>Python 常用的列表操作</title><link>https://www.linuxzen.com/python-chang-yong-de-lie-biao-cao-zuo.html</link><description>&lt;p&gt;这里介绍几个常用的列表操作&lt;/p&gt;
&lt;h3 id="_1"&gt;添加元素&lt;/h3&gt;
&lt;p&gt;添加元素使用列表的内置方法append&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# number = [1, 2, 3, 4, 5]&lt;/span&gt;
&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;# number …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 10 Aug 2012 15:48:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-08-10:/python-chang-yong-de-lie-biao-cao-zuo.html</guid><category>Python</category><category>重复</category><category>相加</category><category>添加</category><category>列表</category><category>python</category></item><item><title>Python超简单截取中文字符串</title><link>https://www.linuxzen.com/pythonchao-jian-dan-jie-qu-zhong-wen-zi-fu-chuan.html</link><description>&lt;p&gt;web应用难免会截取字符串的需求,Python中截取英文很容易:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;abce&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;abc&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;但是截取utf-8的中文机会截取一半导致一些不是乱码的乱码.其实utf8截取很简单,这里记下来作为备忘&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;#-*- coding:utf8 -*-&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;中文截取&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# 结果u&amp;#39;中文截取&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;就这么 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Wed, 11 Jul 2012 17:55:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-07-11:/pythonchao-jian-dan-jie-qu-zhong-wen-zi-fu-chuan.html</guid><category>Python</category><category>截取</category><category>字符串</category><category>utf8</category><category>python</category></item><item><title>mongoengine使用笔记</title><link>https://www.linuxzen.com/mongoengineshi-yong-bi-ji.html</link><description>&lt;p&gt;最近重新拾起Django,但是Django并不支持mongodb,但是有一个模块mongoengine可以实现Django Model类似的封装.但是mongoengine的中文文档几乎没有,有的也是简短的几句介绍和使用.下面我就分享一下我在使用过程 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sat, 23 Jun 2012 10:02:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-06-23:/mongoengineshi-yong-bi-ji.html</guid><category>Python</category><category>python</category><category>pymongo</category><category>nosql</category><category>mongoengine</category><category>mongodb</category></item><item><title>bottle使用Python装饰器巧妙解决用户验证</title><link>https://www.linuxzen.com/bottleshi-yong-pythonzhuang-shi-qi-qiao-miao-jie-jue-yong-hu-yan-zheng.html</link><description>&lt;p&gt;上篇文章发布了一个自己写的用bottle写的web程序,其中收获最大就是Python装饰器的使用.前几天也是比较忙,所以没能分享出来,今天就给大家分享一下 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sat, 16 Jun 2012 17:33:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-06-16:/bottleshi-yong-pythonzhuang-shi-qi-qiao-miao-jie-jue-yong-hu-yan-zheng.html</guid><category>Python</category><category>验证</category><category>装饰器</category><category>用户</category><category>python</category><category>bottle</category></item><item><title>用bottle+mongodb写的一个blog程序</title><link>https://www.linuxzen.com/yong-bottlemongodbxie-de-yi-ge-blogcheng-xu.html</link><description>&lt;p&gt;我个人觉得更好更快的学习和掌握某个东西最好的方法就是使用它,多使用它.然后在一次次的解决问题中来快速掌握 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sat, 16 Jun 2012 16:20:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-06-16:/yong-bottlemongodbxie-de-yi-ge-blogcheng-xu.html</guid><category>Python</category><category>项目</category><category>实例</category><category>web</category><category>python</category><category>mongodb</category><category>bottle</category></item><item><title>bottle的cookie操作小记(获取不是在当前页面创建的cookie)</title><link>https://www.linuxzen.com/bottlede-cookiecao-zuo-xiao-ji-huo-qu-bu-shi-zai-dang-qian-ye-mian-chuang-jian-de-cookie.html</link><description>&lt;p&gt;这两天为用bottle+mongodb写的一个项目加上登录功能,无奈怎么都获取不到保存的cookie,文档给出让我们这样操作cookie的代码片段:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;login&lt;/span&gt; &lt;span class="p"&gt;():&lt;/span&gt;
      &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;check_user_credentials&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sat, 02 Jun 2012 17:51:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-06-02:/bottlede-cookiecao-zuo-xiao-ji-huo-qu-bu-shi-zai-dang-qian-ye-mian-chuang-jian-de-cookie.html</guid><category>Python</category><category>web</category><category>python</category><category>cookie</category><category>bottle</category></item><item><title>使用beaker让bottle支持session</title><link>https://www.linuxzen.com/shi-yong-beakerrang-bottlezhi-chi-session.html</link><description>&lt;p&gt;bottle是一个小型web框架,很小只有一个文件,但功能确很强大,学起来也简单,简单和小巧的同时也有很多不足,某些功能支持还不是很完善,比如 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sat, 26 May 2012 11:38:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-05-26:/shi-yong-beakerrang-bottlezhi-chi-session.html</guid><category>Python</category><category>web</category><category>session</category><category>python</category><category>bottle</category><category>beaker</category></item><item><title>使用Linux shell实时检测文件变更</title><link>https://www.linuxzen.com/shi-yong-linux-shellshi-shi-jian-ce-wen-jian-bian-geng.html</link><description>&lt;p&gt;使用python做web开发,现在流行使用uwsgi调用python程序,但是使用uwsgi一段时间发现有一个弊端,就是每次更改源代码后必须重启uwsgi才能生效,包括更改模板文件也是,我是个懒人,再经过一段 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 18 May 2012 11:16:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-05-18:/shi-yong-linux-shellshi-shi-jian-ce-wen-jian-bian-geng.html</guid><category>Linux</category><category>检测</category><category>文件</category><category>实时</category><category>变更</category><category>uwsgi</category><category>shell</category><category>python</category><category>Linux</category><category>bottle</category></item><item><title>Gentoo下搭建python web环境(nginx+bottle+virtualenv+uwsgi)</title><link>https://www.linuxzen.com/gentooxia-da-jian-python-webhuan-jing-nginxbottlevirtualenvuwsgi.html</link><description>&lt;p&gt;最近根据Gentoo官方文档整了一台Gentoo的虚拟机,感觉还是不错的,决定放弃CentOS投奔Gentoo,这几天研究NoSQL mongodb和python的bottle框架,web.py效率不是很好,而且是类级,bottle使用装饰器(虽然对她还是懵懂阶段,但是貌似很强大).感 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Wed, 16 May 2012 11:05:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-05-16:/gentooxia-da-jian-python-webhuan-jing-nginxbottlevirtualenvuwsgi.html</guid><category>Linux</category><category>web</category><category>virtualenv</category><category>uwsgi</category><category>python</category><category>Gentoo</category><category>bottle</category><category>nginx</category></item><item><title>iptables:restorecon: command not found无法保存策略解决</title><link>https://www.linuxzen.com/iptablesrestorecon-command-not-foundwu-fa-bao-cun-ce-lue-jie-jue.html</link><description>&lt;p&gt;今天更新了几条iptables,但是运行命令&lt;code&gt;service iptables save&lt;/code&gt;保存时确提示&lt;code&gt;iptables: Saving firewall rules to /etc/sysconfig/iptables: /etc/init.d/iptables: line 268: restorecon: command not found&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;好吧,很明显的错误,找 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Mon, 30 Apr 2012 10:43:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-04-30:/iptablesrestorecon-command-not-foundwu-fa-bao-cun-ce-lue-jie-jue.html</guid><category>Linux</category><category>防火墙</category><category>策略</category><category>无法保存</category><category>restorecon</category><category>iptables</category></item><item><title>用Python写的终端下的翻译工具</title><link>https://www.linuxzen.com/yong-pythonxie-de-zhong-duan-xia-de-fan-yi-gong-ju.html</link><description>&lt;p&gt;为什么写这个程序,为什么不给这个程序配备gui?原因很简单,因为我是一个命令行控,Linux习惯了不习惯了鼠标,总觉得点着不如敲命令快,各位在 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Mon, 23 Apr 2012 23:23:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-04-23:/yong-pythonxie-de-zhong-duan-xia-de-fan-yi-gong-ju.html</guid><category>Python</category><category>翻译</category><category>终端</category><category>python</category><category>Linux</category><category>google</category></item><item><title>用python发带附件的邮件用来定时备份mysql数据库</title><link>https://www.linuxzen.com/yong-pythonfa-dai-fu-jian-de-you-jian-yong-lai-ding-shi-bei-fen-mysqlshu-ju-ku.html</link><description>&lt;p&gt;最近迁移了wordpress,系统升级为CentOS 6,很奇怪的一个问题,在原来CentOS 5.8下用的很正常的定时备份数据库并通过邮件发送的脚本不能发送附件,其他都正常,邮件内容也是uuencode生成的文件编码,但是就是不产生附件.而且 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sat, 21 Apr 2012 18:26:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-04-21:/yong-pythonfa-dai-fu-jian-de-you-jian-yong-lai-ding-shi-bei-fen-mysqlshu-ju-ku.html</guid><category>Python</category><category>附件</category><category>邮件</category><category>定时</category><category>备份</category><category>python</category><category>pymail</category><category>MySQL</category><category>mail</category></item><item><title>CentOS下搭建python web生产环境(nginx+web.py+uwsgi)</title><link>https://www.linuxzen.com/centosxia-da-jian-python-websheng-chan-huan-jing-nginxwebpyuwsgi.html</link><description>&lt;p&gt;前面都一篇文章介绍介绍了Ubuntu下web.py的开发环境搭建,这篇文章主要来介绍如何让web.py结合nginx来实现生产环境&lt;/p&gt;
&lt;p&gt;首先使用环境介绍:
系统: CentOS 5.5 32位&lt;/p&gt;
&lt;p&gt;Python版本:2.7.2&lt;/p&gt;
&lt;p&gt;nginx:1.0.13 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Thu, 19 Apr 2012 17:59:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-04-19:/centosxia-da-jian-python-websheng-chan-huan-jing-nginxwebpyuwsgi.html</guid><category>Linux</category><category>web.py</category><category>web</category><category>uwsgi</category><category>spawn-fcgi</category><category>python</category><category>nginx</category></item><item><title>lvs+keepalived实现高可用群集配置详解</title><link>https://www.linuxzen.com/lvskeepalivedshi-xian-gao-ke-yong-qun-ji-pei-zhi-xiang-jie.html</link><description>&lt;p&gt;lvs是一个开源的软件，由毕业于国防科技大学的章文嵩博士于1998年5月创立(中国人的项目)，可以实现LINUX平台下的简单负载均衡。LVS是Linux Virtual Server的缩写，意思是Linux虚拟服务器。本文将介绍lvs结合keepalived实现一个高科用的Linux群集系统.&lt;/p&gt;
&lt;p&gt;lvs有三种工作模式NAT(地址转换),IP Tunneling …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Mon, 16 Apr 2012 14:25:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-04-16:/lvskeepalivedshi-xian-gao-ke-yong-qun-ji-pei-zhi-xiang-jie.html</guid><category>Linux</category><category>高可用</category><category>详解</category><category>群集</category><category>lvs</category><category>Linux</category><category>keepalived</category></item><item><title>使用Python进行web开发</title><link>https://www.linuxzen.com/shi-yong-pythonjin-xing-webkai-fa.html</link><description>&lt;p&gt;最近有一个小的web项目,想用喜爱都python,但是想到之前接触过都django我感觉一阵不寒而栗,为什么?Django的配置太过复杂,而且小项目不太适合MVC的开发模式,所以我将目光转向了web.py这个小型web框架 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 13 Apr 2012 16:39:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-04-13:/shi-yong-pythonjin-xing-webkai-fa.html</guid><category>Python</category><category>开发</category><category>web.py</category><category>Ubuntu</category><category>python</category><category>Linux</category></item><item><title>Linux下配置vim一键编译C/C++并执行</title><link>https://www.linuxzen.com/linuxxia-pei-zhi-vimyi-jian-bian-yi-ccbing-zhi-xing.html</link><description>&lt;p&gt;最近在学习C++,编辑器当然是vim,想在编辑的时候可以一键编译,于是自己写了一个小脚本配合vim来实现.由于刚开始学,所以对C …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Thu, 05 Apr 2012 12:07:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-04-05:/linuxxia-pei-zhi-vimyi-jian-bian-yi-ccbing-zhi-xing.html</guid><category>Vim</category><category>编译</category><category>一键</category><category>vim</category><category>Linux</category><category>C/C++</category></item><item><title>使用cacti构建监控系统</title><link>https://www.linuxzen.com/shi-yong-cactigou-jian-jian-kong-xi-tong.html</link><description>&lt;p&gt;Cacti是一套基于PHP,MySQL,SNMP及RRDTool开发的网络流量监测图形分析工具,它是通过 snmpget来获取数据，使用 RRDtool绘画图形,可以指定每一个用户能查看树状结构、host以及任何一张图，还可以与LDAP结合进行用户验证，同时也能自己增加模板，功能非常强大完 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Wed, 14 Mar 2012 14:02:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-03-14:/shi-yong-cactigou-jian-jian-kong-xi-tong.html</guid><category>Linux</category><category>监控</category><category>lnmp</category><category>Linux</category><category>CentOS</category><category>cacti</category></item><item><title>lnmp环境搭建完全手册(四)——lnmp搭建(源码安装)</title><link>https://www.linuxzen.com/lnmphuan-jing-da-jian-wan-quan-shou-ce-si-lnmpda-jian-yuan-ma-an-zhuang.html</link><description>&lt;p&gt;上面3篇我们主要对系统进行了安装和配置,并且配置了yum包管理器,安装了几个常用的工具,这篇我们就来介绍如何来搭建lnmp环境.这里的LNMP环境是指Linux下搭建Nginx+MySQL+PHP.Nginx是一个高性能的 HTTP 和 反向代理 服务器，也 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Tue, 13 Mar 2012 13:13:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-03-13:/lnmphuan-jing-da-jian-wan-quan-shou-ce-si-lnmpda-jian-yuan-ma-an-zhuang.html</guid><category>Linux</category><category>源码包</category><category>安装</category><category>php</category><category>nginx</category><category>MySQL</category><category>Linux</category><category>CentOS</category></item><item><title>lnmp环境搭建完全手册(三)——应用安装(yum配置和包安装)</title><link>https://www.linuxzen.com/lnmphuan-jing-da-jian-wan-quan-shou-ce-san-ying-yong-an-zhuang-yumpei-zhi-he-bao-an-zhuang.html</link><description>&lt;p&gt;上两篇文章我给大家讲解了系统的安装,网络和ssh的配置和连接,这篇就给大家讲一下Linux如何安装包.CentOS使用rpm包管理,rpm包安装使用rpm命令&lt;/p&gt;
&lt;p&gt;比如你有一个包为:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;abc-0.1.3-el5.centos.rpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;包的名称 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Tue, 13 Mar 2012 10:06:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-03-13:/lnmphuan-jing-da-jian-wan-quan-shou-ce-san-ying-yong-an-zhuang-yumpei-zhi-he-bao-an-zhuang.html</guid><category>Linux</category><category>yum</category><category>nginx</category><category>man</category><category>lnmp</category><category>Linux</category><category>CentOS</category></item><item><title>lnmp环境搭建完全手册(二)——系统配置(实现虚拟机上网/ssh/)</title><link>https://www.linuxzen.com/lnmphuan-jing-da-jian-wan-quan-shou-ce-er-xi-tong-pei-zhi-shi-xian-xu-ni-ji-shang-wang-ssh.html</link><description>&lt;p&gt;上一篇介绍了如何安装Linux,安装Linux后我们如果只在终端界面下配置会很麻烦,我们可以通过windows连接linux的ssh进行配置linux.SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sat, 10 Mar 2012 11:31:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-03-10:/lnmphuan-jing-da-jian-wan-quan-shou-ce-er-xi-tong-pei-zhi-shi-xian-xu-ni-ji-shang-wang-ssh.html</guid><category>Linux</category><category>虚拟机</category><category>上网</category><category>ssh</category><category>NAT</category><category>lnmp</category></item><item><title>lnmp环境搭建完全手册(一)------系统安装</title><link>https://www.linuxzen.com/lnmphuan-jing-da-jian-wan-quan-shou-ce-yi-xi-tong-an-zhuang.html</link><description>&lt;p&gt;在之前的文章里也陆陆续续的介绍了nginx/mysql和php的安装和配置,这里做一个整合.也是一个详细的教程,可以让你0基础搭建lnmp环境.
首先选择一个发行版,个人 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Thu, 08 Mar 2012 12:05:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-03-08:/lnmphuan-jing-da-jian-wan-quan-shou-ce-yi-xi-tong-an-zhuang.html</guid><category>Linux</category><category>虚拟机</category><category>操作系统</category><category>安装</category><category>VMware</category><category>Linux</category><category>CentOS</category></item><item><title>nginx平台搭建nagios监控系统</title><link>https://www.linuxzen.com/nginxping-tai-da-jian-nagiosjian-kong-xi-tong.html</link><description>&lt;p&gt;Nagios是一款开源的免费网络监视工具，能有效监控Windows、Linux和Unix的主机状态，交换机路由器等网络设置，打印机等。在系统或服务状态异常时发出邮件或短信报警第一时间通知网 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sun, 26 Feb 2012 10:48:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-02-26:/nginxping-tai-da-jian-nagiosjian-kong-xi-tong.html</guid><category>Linux</category><category>配置</category><category>监控</category><category>rewrite</category><category>nginx认证</category><category>nginx支持cgi</category><category>nginx</category><category>nagios</category><category>Linux</category></item><item><title>搭建ntop监测局域网内流量</title><link>https://www.linuxzen.com/da-jian-ntopjian-ce-ju-yu-wang-nei-liu-liang.html</link><description>&lt;p&gt;ntop是一种监控网络流量的工具，用ntop显示网络的使用情况比其他一些网管软件更加直观、详细。ntop甚至可以列出每个节点计算机的网络带宽利用率。ntop是一个灵活的、功能齐全的，用来监控和解决局域网问题的工具。它同时提供命令行输入和Web界面，可应用于嵌入式Web服务。&lt;/p&gt;
&lt;p&gt;本文环 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Mon, 20 Feb 2012 17:37:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-02-20:/da-jian-ntopjian-ce-ju-yu-wang-nei-liu-liang.html</guid><category>Linux</category><category>监控</category><category>流量</category><category>局域网</category><category>ntop</category><category>Linux</category></item><item><title>Linux一些比较实用的小技巧</title><link>https://www.linuxzen.com/linuxyi-xie-bi-jiao-shi-yong-de-xiao-ji-qiao.html</link><description>&lt;p&gt;在Linux中各种各样的小技巧可以帮助我们更好更快的完成我们的工作,下面就介绍一些我所知道的小技巧&lt;/p&gt;
&lt;h2 id="_1"&gt;文件查找&lt;/h2&gt;
&lt;p&gt;找出最近修改的文件:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;-ctime&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# 找出根下最近24小时修改过inode信息的文件(更改权限)&lt;/span&gt;
find&lt;span class="w"&gt; &lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;-mtime&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# 找出根 …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Mon, 20 Feb 2012 11:30:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-02-20:/linuxyi-xie-bi-jiao-shi-yong-de-xiao-ji-qiao.html</guid><category>Linux</category><category>命令</category><category>sz</category><category>ssh上传下载</category><category>shell</category><category>sed</category><category>rz</category><category>lrzsz</category><category>Linux</category><category>find</category><category>awk</category></item><item><title>编写Linux shell脚本来实现nginx日志分割</title><link>https://www.linuxzen.com/bian-xie-linux-shelljiao-ben-lai-shi-xian-nginxri-zhi-fen-ge.html</link><description>&lt;p&gt;nginx的accss日志每天都会产生大量的日志,不过不进行切割会使查看日志变得异常艰难,这里编写一个脚本结合crond来实现nginx的日志切割,切割的格式为日志后缀的数字越小表示离当 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Fri, 17 Feb 2012 10:27:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-02-17:/bian-xie-linux-shelljiao-ben-lai-shi-xian-nginxri-zhi-fen-ge.html</guid><category>Linux</category><category>日志</category><category>分割</category><category>shell</category><category>nginx</category><category>log</category><category>Linux</category><category>cut</category></item><item><title>heartbeat实现MySQL双机高可用</title><link>https://www.linuxzen.com/heartbeatshi-xian-mysqlshuang-ji-gao-ke-yong.html</link><description>&lt;p&gt;对于一个网站或一个企业最重要的无疑就是数据,那么数据库的数据安全无疑就更加重要,所以我们必须保证数据库的 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sun, 12 Feb 2012 17:01:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-02-12:/heartbeatshi-xian-mysqlshuang-ji-gao-ke-yong.html</guid><category>Linux</category><category>高可用</category><category>心跳</category><category>双机</category><category>vip</category><category>MySQL</category><category>heartbeat</category></item><item><title>nginx+keepalived配置高可用HTTP群集</title><link>https://www.linuxzen.com/nginxkeepalivedpei-zhi-gao-ke-yong-httpqun-ji.html</link><description>&lt;p&gt;Nginx不仅是一款优秀的WEB服务器,同时可以根据nginx的反代理可以配置成强大的负载均衡器.这里就介绍如何把nginx配置成负载均衡器,并结合keepalived配置高可用的集群.
一般集群主要架构为:&lt;/p&gt;
&lt;p&gt;前端为负载均衡器两个:主/备,两种工作方式,一种 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Thu, 09 Feb 2012 17:35:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-02-09:/nginxkeepalivedpei-zhi-gao-ke-yong-httpqun-ji.html</guid><category>Linux</category><category>高可用</category><category>负载均衡</category><category>群集</category><category>反向代理</category><category>双机</category><category>nginx</category><category>keepalived</category></item><item><title>MySQL优化笔记</title><link>https://www.linuxzen.com/mysqlyou-hua-bi-ji.html</link><description>&lt;p&gt;之前安装时没注意MySQL的优化,先想对MySQL做一下优化.首先看一下没有优化之前各个参数:
MySQL预编译参数:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt; &lt;/span&gt;./configure&lt;span class="w"&gt;  &lt;/span&gt;--prefix&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/mysql&lt;span class="w"&gt; &lt;/span&gt;--with-ssl&lt;span class="w"&gt; &lt;/span&gt;--with-readline&lt;span class="w"&gt; &lt;/span&gt;--with-big-tables&lt;span class="w"&gt; &lt;/span&gt;--enable-assembler
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;top&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="m"&gt;32553&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;mysql&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;125m&lt;span class="w"&gt;  &lt;/span&gt;17m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4064&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;S&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.0&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;1 …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Sat, 04 Feb 2012 13:36:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-02-04:/mysqlyou-hua-bi-ji.html</guid><category>Linux</category><category>编译参数</category><category>优化</category><category>mysql配置文件</category><category>MySQL服务</category><category>MySQL</category><category>my.cnf</category></item><item><title>用pxe安装自己定制的发行版快速部署系统环境</title><link>https://www.linuxzen.com/yong-pxean-zhuang-zi-ji-ding-zhi-de-fa-xing-ban-kuai-su-bu-shu-xi-tong-huan-jing.html</link><description>&lt;p&gt;自己的发行版出来之后如何快速应用到企业中,可以使用PXE网络安装实现无人值守安装. 先解释下PXE安装,这是由Intel开发的一项技术,支持通过网络从远程服务器下载启动 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Thu, 02 Feb 2012 11:37:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-02-02:/yong-pxean-zhuang-zi-ji-ding-zhi-de-fa-xing-ban-kuai-su-bu-shu-xi-tong-huan-jing.html</guid><category>Linux</category><category>网络安装</category><category>网卡启动</category><category>无人值守</category><category>pxe</category><category>Linux</category><category>cfengine</category></item><item><title>将cfengine集成到自己定制的发行版</title><link>https://www.linuxzen.com/jiang-cfengineji-cheng-dao-zi-ji-ding-zhi-de-fa-xing-ban.html</link><description>&lt;p&gt;上一篇文章介绍如何定制自己的发行版,并且完全根据CentOS进行定制,我们看到了用cfengine管理Linux系统的优势,如何快速部署cfengine呢,我们把cfengine集成到自己的定制的Linux中.
本文根据编译好的 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Thu, 19 Jan 2012 11:35:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-01-19:/jiang-cfengineji-cheng-dao-zi-ji-ding-zhi-de-fa-xing-ban.html</guid><category>Linux</category><category>集成</category><category>定制</category><category>发行版</category><category>Linux</category><category>cfengine</category></item><item><title>根据CentOS定制自己的发行版</title><link>https://www.linuxzen.com/gen-ju-centosding-zhi-zi-ji-de-fa-xing-ban.html</link><description>&lt;p&gt;本文使用的环境为CentOS5.5 32位.
首先要做的是最小化安装CentOS,就是安装过程中选择要安装包的时候使用自定义,然后去除所有 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Wed, 18 Jan 2012 11:13:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-01-18:/gen-ju-centosding-zhi-zi-ji-de-fa-xing-ban.html</guid><category>Linux</category><category>定制</category><category>mkisofs</category><category>createrepo</category><category>comps.xml</category><category>CentOS</category></item><item><title>安装配置cfengine实现自动化配置Linux/Unix服务器</title><link>https://www.linuxzen.com/an-zhuang-pei-zhi-cfengineshi-xian-zi-dong-hua-pei-zhi-linuxunixfu-wu-qi.html</link><description>&lt;p&gt;cfengine（配置引擎）是一种 UNIX 管理工具，其目的是使简单的管理的任务自动化，使困难的任务变得较容易。Cfengine 适用于管理各种环境 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Tue, 17 Jan 2012 23:06:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-01-17:/an-zhuang-pei-zhi-cfengineshi-xian-zi-dong-hua-pei-zhi-linuxunixfu-wu-qi.html</guid><category>Linux</category><category>自动配置</category><category>自动化</category><category>服务器</category><category>Unix</category><category>Linux</category><category>cfengine</category></item><item><title>Linux shell脚本调试技巧</title><link>https://www.linuxzen.com/linux-shelljiao-ben-diao-shi-ji-qiao.html</link><description>&lt;p&gt;有时候shell脚本不会给予明显的调试信息,而且有时不报错,但是脚本没有达到预期的效果这时候脚本调试就可以帮你准确定位错误.&lt;/p&gt;
&lt;p&gt;在脚本的最顶部加 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">cold</dc:creator><pubDate>Tue, 17 Jan 2012 17:04:00 +0800</pubDate><guid isPermaLink="false">tag:www.linuxzen.com,2012-01-17:/linux-shelljiao-ben-diao-shi-ji-qiao.html</guid><category>Linux</category><category>调试</category><category>技巧</category><category>shell</category><category>Linux</category></item></channel></rss>